{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/forgotpassword/ForgotPassword.js\";\nimport { Component } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport axios from \"../../axios-adm\";\nimport { Button } from 'primereact/button';\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recoverRequest: {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        otp: \"\"\n      },\n      displayError: false,\n      displayResult: false,\n      showPassword: false,\n      showSuccessMessage: false,\n      message: \"\"\n    };\n\n    this.changeValueEmail = event => {\n      let data = { ...this.state.recoverRequest\n      };\n      data.email = event.target.value;\n      this.setState({\n        recoverRequest: data\n      });\n      this.setState({\n        displayError: false\n      });\n    };\n\n    this.changeValueOtp = event => {\n      let data = { ...this.state.recoverRequest\n      };\n      data.otp = event.target.value;\n      this.setState({\n        recoverRequest: data\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      this.setState({\n        showPassword: false\n      });\n\n      if (this.state.recoverRequest.email === \"\") {\n        this.setState({\n          displayError: true\n        });\n        this.setState({\n          message: \"Please username to proceed\"\n        });\n      } else {\n        axios.post('http://localhost:8080/recover', this.state.recoverRequest).then(response => {\n          console.log(response);\n\n          if (response.data.result === \"Success\") {\n            this.setState({\n              displayResult: true\n            });\n          } else if (response.data.result === \"Invalid\") {\n            this.setState({\n              displayError: true\n            });\n            this.setState({\n              message: \"Username not found !!\"\n            });\n            this.setState({\n              displayResult: false\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n          this.setState({\n            message: error\n          });\n        });\n      }\n    };\n\n    this.updatePassword = () => {\n      this.setState({\n        displayResult: false,\n        showSuccessMessage: false,\n        displayError: false\n      });\n\n      if (this.state.recoverRequest.password === \"\" || this.state.recoverRequest.confirmPassword === \"\") {\n        this.setState({\n          displayError: true,\n          message: \"Password/ConfirmPassword required\"\n        });\n      } else if (this.state.recoverRequest.password != this.state.recoverRequest.confirmPassword) {\n        this.setState({\n          displayError: true,\n          message: \"Password and ConfirmPassword dosenot match\"\n        });\n      } else {\n        axios.post('http://localhost:8080/updatepassword', this.state.recoverRequest).then(response => {\n          console.log(response);\n\n          if (response.data.result === \"Success\") {\n            this.setState({\n              showSuccessMessage: true\n            });\n            this.setState({\n              message: \"Password updated successfully. Please use new password to login.\"\n            });\n          } else if (response.data.result === \"Invalid\") {\n            this.setState({\n              displayError: true\n            });\n            this.setState({\n              message: \"Username not found !!\"\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n          this.setState({\n            message: error\n          });\n        });\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        displayResult: false,\n        recoverRequest: {}\n      });\n      let clearedRecoveryData = { ...this.state.recoverRequest\n      };\n      clearedRecoveryData.email = \"\";\n      clearedRecoveryData.otp = \"\";\n      this.setState({\n        recoverRequest: clearedRecoveryData\n      });\n      this.setState({\n        displayError: false\n      });\n      this.setState({\n        showPassword: false,\n        showSuccessMessage: false\n      });\n    };\n\n    this.verifyOtp = () => {\n      if (this.state.recoverRequest.otp === \"\") {\n        this.setState({\n          displayError: true,\n          message: \"Provide OTP to proceed\"\n        });\n      } else if (this.state.recoverRequest.otp != \"123456\") {\n        this.setState({\n          displayError: true,\n          message: \"Invalid OTP\"\n        });\n      } else {\n        this.setState({\n          showPassword: true,\n          displayResult: false,\n          displayError: false\n        });\n      }\n    };\n\n    this.changeNewPassword = event => {\n      let data = { ...this.state.recoverRequest\n      };\n      data.password = event.target.value;\n      this.setState({\n        recoverRequest: data\n      });\n    };\n\n    this.changeConfirmPassword = event => {\n      let data = { ...this.state.recoverRequest\n      };\n      data.confirmPassword = event.target.value;\n      this.setState({\n        recoverRequest: data\n      });\n    };\n\n    this.redirectToLogin = () => {\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    let renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        value: this.state.recoverRequest.email,\n        placeholder: \"Enter email address\",\n        onChange: this.changeValueEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingLeft: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Search\",\n          className: \"p-button-outlined\",\n          disabled: this.state.showSuccessMessage,\n          onClick: this.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingLeft: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Clear\",\n          className: \"p-button-outlined\",\n          onClick: this.clear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this);\n\n    if (this.state.showPassword && !this.state.showSuccessMessage) {\n      renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Change Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            type: \"password\",\n            value: this.state.password,\n            placeholder: \"New password\",\n            onChange: this.changeNewPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            type: \"password\",\n            value: this.state.confirmPassword,\n            placeholder: \"Confirm password\",\n            onChange: this.changeConfirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Update\",\n            className: \"p-button-outlined\",\n            onClick: this.updatePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }, this);\n    }\n\n    let showResult = null;\n\n    if (this.state.displayResult) {\n      showResult = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"You will receive an otp on \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", this.state.recoverRequest.email, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 58\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: \"10px\",\n              paddingBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                type: \"text\",\n                value: this.state.otp,\n                placeholder: \"Enter OTP received on mobile or email\",\n                onChange: this.changeValueOtp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                label: \"Verify OTP\",\n                className: \"p-button-outlined\",\n                onClick: this.verifyOtp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 26\n      }, this);\n    }\n\n    let errormessage = null;\n\n    if (this.state.displayError) {\n      errormessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"20px\",\n          color: \"red\"\n        },\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 28\n      }, this);\n    }\n\n    let showSuccessMessage = null;\n\n    if (this.state.showSuccessMessage && !this.state.displayError) {\n      showSuccessMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\",\n          color: \"green\"\n        },\n        children: [this.state.message, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"black\"\n          },\n          children: [\"Click here to go back to \", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: \"blue\"\n            },\n            onClick: this.redirectToLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 75\n          }, this), \" page.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 34\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password recovery page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"20px\"\n        },\n        children: [renderView, showResult, errormessage, showSuccessMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/forgotpassword/ForgotPassword.js"],"names":["Component","InputText","axios","Button","ForgotPassword","state","recoverRequest","email","password","confirmPassword","otp","displayError","displayResult","showPassword","showSuccessMessage","message","changeValueEmail","event","data","target","value","setState","changeValueOtp","submit","preventDefault","post","then","response","console","log","result","catch","error","updatePassword","clear","clearedRecoveryData","verifyOtp","changeNewPassword","changeConfirmPassword","redirectToLogin","props","history","push","render","renderView","paddingTop","paddingBottom","paddingLeft","showResult","errormessage","color"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport { InputText } from 'primereact/inputtext';\nimport axios from \"../../axios-adm\";\nimport { Button } from 'primereact/button';\nclass ForgotPassword extends Component{\n\n    state = {\n        recoverRequest:{\n            email:\"\",\n            password: \"\",\n            confirmPassword: \"\",\n            otp: \"\"\n        },\n        displayError: false,\n        displayResult: false,\n        showPassword: false,\n        showSuccessMessage: false,\n        message: \"\"\n    }\n\n    changeValueEmail =(event) =>{\n        let data = {...this.state.recoverRequest};\n        data.email = event.target.value;\n        this.setState({recoverRequest : data})\n        this.setState({displayError : false})\n    }\n    changeValueOtp = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.otp = event.target.value;\n        this.setState({recoverRequest : data})\n    }\n\n    submit = (event) =>{\n        event.preventDefault();\n        this.setState({showPassword : false});\n         if(this.state.recoverRequest.email === \"\"){\n            this.setState({displayError : true})\n            this.setState({message : \"Please username to proceed\"})\n         }else{\n                axios.post('http://localhost:8080/recover', this.state.recoverRequest)\n                .then(response => {\n                console.log(response);\n                if(response.data.result === \"Success\"){\n                    this.setState({displayResult : true})\n                } else if(response.data.result === \"Invalid\"){\n                    this.setState({displayError : true})\n                    this.setState({message : \"Username not found !!\"})  \n                    this.setState({displayResult : false})\n                }\n            })\n            .catch( error =>{\n                console.log(error);\n                this.setState({message : error})  \n            })\n         }\n     }\n\n     updatePassword = () => {\n        this.setState({displayResult : false, showSuccessMessage: false, displayError: false})\n         if(this.state.recoverRequest.password === \"\" || this.state.recoverRequest.confirmPassword === \"\"){\n            this.setState({displayError: true, message : \"Password/ConfirmPassword required\"})\n         } else if(this.state.recoverRequest.password !=  this.state.recoverRequest.confirmPassword){\n            this.setState({displayError: true, message : \"Password and ConfirmPassword dosenot match\"})\n         } else {\n            axios.post('http://localhost:8080/updatepassword', this.state.recoverRequest)\n            .then(response => {\n            console.log(response);\n            if(response.data.result === \"Success\"){\n                this.setState({showSuccessMessage: true})\n                this.setState({message : \"Password updated successfully. Please use new password to login.\"})  \n            } else if(response.data.result === \"Invalid\"){\n                this.setState({displayError : true})\n                this.setState({message : \"Username not found !!\"})  \n            }\n        })\n        .catch( error =>{\n            console.log(error);\n            this.setState({message : error})  \n        })\n         }\n     }\n \n     clear = () =>{\n         this.setState({displayResult : false , recoverRequest : {}})\n         let clearedRecoveryData = {...this.state.recoverRequest};\n         clearedRecoveryData.email= \"\";\n         clearedRecoveryData.otp= \"\";\n         this.setState({recoverRequest : clearedRecoveryData});\n         this.setState({displayError : false})\n         this.setState({showPassword : false, showSuccessMessage : false});\n     }\n\n     verifyOtp = () =>{\n         if(this.state.recoverRequest.otp === \"\"){\n            this.setState({displayError: true, message : \"Provide OTP to proceed\"})\n         }else if(this.state.recoverRequest.otp != \"123456\"){ \n            this.setState({displayError: true, message : \"Invalid OTP\"})\n         }else{\n            this.setState({showPassword : true, displayResult : false , displayError: false });\n         }  \n     }\n\n     changeNewPassword = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.password = event.target.value;\n        this.setState({recoverRequest : data})\n     }\n\n     changeConfirmPassword = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.confirmPassword = event.target.value;\n        this.setState({recoverRequest : data})\n     }\n\n     redirectToLogin =() =>{\n         this.props.history.push(\"/\");\n     }\n    render(){\n\n        let renderView = \n        <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n             <InputText \n                   value={this.state.recoverRequest.email} \n                   placeholder= \"Enter email address\"\n                   onChange={this.changeValueEmail }/>\n    \n            <span style={{paddingLeft : \"10px\"}}>\n                <Button label=\"Search\" className=\"p-button-outlined\" disabled ={this.state.showSuccessMessage} onClick={this.submit}/>\n            </span>\n            <span style={{paddingLeft : \"10px\"}}>\n                <Button label=\"Clear\" className=\"p-button-outlined\" onClick={this.clear}/>\n            </span>\n         </div>;\n\n        if(this.state.showPassword && !this.state.showSuccessMessage ){\n            renderView =  <div>\n                <div>Change Your Password</div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <InputText \n                        type=\"password\"\n                        value={this.state.password} \n                        placeholder= \"New password\"\n                        onChange={this.changeNewPassword}/>\n                </div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <InputText \n                        type=\"password\"\n                        value={this.state.confirmPassword} \n                        placeholder= \"Confirm password\"\n                        onChange={this.changeConfirmPassword}/>\n                </div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <Button label=\"Update\" className=\"p-button-outlined\"  onClick={this.updatePassword}/>\n                </div>\n            </div>\n        } \n\n        let showResult = null;\n        if(this.state.displayResult){\n            showResult = <div style={{paddingTop: \"20px\"}}>\n                <div>\n                    <div>\n                        <span>You will receive an otp on <b> {this.state.recoverRequest.email} </b> </span>\n                    </div>\n                        <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                            <span>\n                                <InputText \n                                    type=\"text\"\n                                    value={this.state.otp} \n                                    placeholder= \"Enter OTP received on mobile or email\"\n                                    onChange={this.changeValueOtp}/>\n                            </span>\n                            <span style={{paddingLeft : \"10px\"}}>\n                                 <Button label=\"Verify OTP\" className=\"p-button-outlined\"  onClick={this.verifyOtp}/>\n                            </span>\n                        </div>\n                        <div>\n                    </div>   \n                </div>\n            </div>\n        }\n        let errormessage= null;\n        if(this.state.displayError){\n            errormessage = <div style={{paddingTop:\"20px\", color: \"red\"}}>{this.state.message}</div>\n        }\n\n        let showSuccessMessage = null;\n        if(this.state.showSuccessMessage && !this.state.displayError){\n            showSuccessMessage = <div style={{paddingTop:\"20px\",paddingBottom: \"20px\", color: \"green\"}}>{this.state.message}\n                <div style= {{color : \"black\"}} >Click here to go back to <b style={{color:\"blue\"}} onClick={this.redirectToLogin}>Login</b> page.</div>\n            </div>\n        }\n        return(\n            <div>\n                <h1>Password recovery page</h1>\n                <div style={{paddingTop: \"20px\"}}>\n                    {renderView}\n                    {showResult}\n                    {errormessage}\n                    {showSuccessMessage}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}