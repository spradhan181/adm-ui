[{"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/index.js":"1","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/App.js":"2","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/reportWebVitals.js":"3","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/forgotpassword/ForgotPassword.js":"4","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/signup/SignUp.js":"5","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/search/searchresponse/SearchResponse.js":"6","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/Login.js":"7","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/search/Search.js":"8","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/axios-adm.js":"9"},{"size":752,"mtime":1612511282634,"results":"10","hashOfConfig":"11"},{"size":708,"mtime":1612511282631,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612511282637,"results":"13","hashOfConfig":"11"},{"size":12174,"mtime":1612656338046,"results":"14","hashOfConfig":"11"},{"size":10658,"mtime":1612656335638,"results":"15","hashOfConfig":"11"},{"size":2421,"mtime":1612510861798,"results":"16","hashOfConfig":"11"},{"size":8498,"mtime":1612653231253,"results":"17","hashOfConfig":"11"},{"size":4504,"mtime":1612626726166,"results":"18","hashOfConfig":"11"},{"size":126,"mtime":1612511282632,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1w392xy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/index.js",[],["41","42"],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/App.js",[],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/reportWebVitals.js",[],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/forgotpassword/ForgotPassword.js",["43"],"import {Component} from 'react'\nimport { InputText } from 'primereact/inputtext';\nimport axios from \"../../axios-adm\";\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport \"./forgotpassword.css\";\nimport brandlogo from \"../../resources/monkeyMart-black.png\";\nimport brandlogo1 from \"../../resources/monkeyMart-logos_transparent.png\";\n\nclass ForgotPassword extends Component{\n\n    state = {\n        recoverRequest:{\n            email:\"\",\n            password: \"\",\n            confirmPassword: \"\",\n            otp: \"\"\n        },\n        displayError: false,\n        displayResult: false,\n        showPassword: false,\n        showSuccessMessage: false,\n        message: \"\",\n        actionInProgress: false\n    }\n\n    changeValueEmail =(event) =>{\n        let data = {...this.state.recoverRequest};\n        data.email = event.target.value;\n        this.setState({recoverRequest : data})\n        this.setState({displayError : false})\n    }\n    changeValueOtp = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.otp = event.target.value;\n        this.setState({recoverRequest : data})\n    }\n\n    verifyUserName = (event) =>{\n        event.preventDefault();\n        this.setState({showPassword : false});\n         if(this.state.recoverRequest.email === \"\"){\n            this.setState({displayError : true})\n            this.setState({message : \"Please username to proceed\"})\n         }else{\n                this.setState({actionInProgress : true})\n                axios.post('http://localhost:8080/recover', this.state.recoverRequest)\n                .then(response => {\n                console.log(response);\n                if(response.data.result === \"Success\"){\n                    //this.setState({displayResult : true})\n                    this.sendEmail();\n                } else if(response.data.result === \"Invalid\"){\n                    this.setState({displayError : true})\n                    this.setState({message : \"Username not found !!\"})  \n                    this.setState({displayResult : false, actionInProgress : false})\n                }\n            })\n            .catch( error =>{\n                console.log(error);\n                this.setState({message : error, actionInProgress: false})  \n            })\n         }\n     }\n\n     sendEmail = () =>{\n        axios.post('http://localhost:8080/sendemail', {\n            toEmailAddress : this.state.recoverRequest.email,\n            fromEmailAddress : \"monkeymart@gmail.com\",\n            subject:\"One Time Password\"\n        })\n        .then(response => {\n        console.log(response);\n        if(response.data === \"Success\"){\n            this.setState({displayResult : true})\n            this.setState({actionInProgress : false})\n        } else if(response.data.result === \"Failure\"){\n            this.setState({displayError : true})\n            this.setState({message : \"Username not found !!\"})  \n            this.setState({displayResult : false, actionInProgress: false})\n        }\n    })\n    .catch( error =>{\n        console.log(error);\n        this.setState({message : error, actionInProgress: false})  \n    })\n     }\n\n     updatePassword = () => {\n        this.setState({displayResult : false, showSuccessMessage: false, displayError: false})\n         if(this.state.recoverRequest.password === \"\" || this.state.recoverRequest.confirmPassword === \"\"){\n            this.setState({displayError: true, message : \"Password/ConfirmPassword required\"})\n         } else if(this.state.recoverRequest.password !=  this.state.recoverRequest.confirmPassword){\n            this.setState({displayError: true, message : \"Password and ConfirmPassword dosenot match\"})\n         } else {\n            axios.post('http://localhost:8080/updatepassword', this.state.recoverRequest)\n            .then(response => {\n            console.log(response);\n            if(response.data.result === \"Success\"){\n                this.setState({showSuccessMessage: true})\n                this.setState({message : \"Password updated successfully. Please use new password to login.\"})  \n            } else if(response.data.result === \"Invalid\"){\n                this.setState({displayError : true})\n                this.setState({message : \"Username not found !!\"})  \n            }\n        })\n        .catch( error =>{\n            console.log(error);\n            this.setState({message : error})  \n        })\n         }\n     }\n \n     clear = () =>{\n         this.setState({displayResult : false , recoverRequest : {}})\n         let clearedRecoveryData = {...this.state.recoverRequest};\n         clearedRecoveryData.email= \"\";\n         clearedRecoveryData.otp= \"\";\n         this.setState({recoverRequest : clearedRecoveryData});\n         this.setState({displayError : false})\n         this.setState({showPassword : false, showSuccessMessage : false});\n     }\n\n     verifyOtp = () =>{\n         if(this.state.recoverRequest.otp === \"\"){\n            this.setState({displayError: true, message : \"Provide OTP to proceed\"})\n         }else{\n                    this.setState({actionInProgress : true})\n                    axios.post('http://localhost:8080/recover', this.state.recoverRequest)\n                    .then(response => {\n                    console.log(response);\n                    if(response.data.result === \"Success\"){\n                        this.setState({showPassword : true, displayResult : false , displayError: false, actionInProgress: false});\n                    } else if(response.data.result === \"Invalid\"){\n                        this.setState({displayError: true, message : \"Invalid OTP\", actionInProgress: false})\n                    }\n                })\n                .catch( error =>{\n                    console.log(error);\n                    this.setState({message : error, actionInProgress: false})  \n                })\n         }\n     }\n\n     changeNewPassword = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.password = event.target.value;\n        this.setState({recoverRequest : data})\n     }\n\n     changeConfirmPassword = (event) =>{\n        let data = {...this.state.recoverRequest};\n        data.confirmPassword = event.target.value;\n        this.setState({recoverRequest : data})\n     }\n\n     redirectToLogin =() =>{\n         this.props.history.push(\"/\");\n     }\n    render(){\n\n        <div>\n           <h1>hello</h1> \n        </div>\n\n        let renderView = \n        <div style={{paddingTop: \"10px\", paddingBottom: \"10px\",}}>\n             <InputText style={{border:\"1px solid black\", width:\"300px\"}} \n                   value={this.state.recoverRequest.email} \n                   placeholder= \"Enter email address\"\n                   onChange={this.changeValueEmail }/>\n    \n            <span style={{paddingLeft : \"10px\"}}>\n                <Button style={{color:\"black\",height:\"25px\",fontSize:\"0.85rem\"}} label=\"Search\" className=\"p-button-outlined\" disabled ={this.state.showSuccessMessage} onClick={this.verifyUserName}/>\n            </span>\n            <span style={{paddingLeft : \"10px\"}}>\n                <Button style={{color:\"black\",height:\"25px\",backgroundColor:\"white\",fontSize:\"0.85rem\"}} label=\"Clear\" className=\"p-button-outlined\" onClick={this.clear}/>\n            </span>\n         </div>;\n\n        if(this.state.showPassword && !this.state.showSuccessMessage ){\n            renderView =  <div>\n                <div>Change Your Password</div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <InputText \n                        type=\"password\"\n                        value={this.state.password} \n                        placeholder= \"New password\"\n                        onChange={this.changeNewPassword}/>\n                </div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <InputText \n                        type=\"password\"\n                        value={this.state.confirmPassword} \n                        placeholder= \"Confirm password\"\n                        onChange={this.changeConfirmPassword}/>\n                </div>\n                <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                    <Button label=\"Update\" className=\"p-button-outlined\"  onClick={this.updatePassword}/>\n                </div>\n            </div>\n        } \n\n        let showResult = null;\n        if(this.state.actionInProgress){\n            showResult = \n            <div style={{paddingTop: \"20px\"}}>\n                <ProgressSpinner style={{width: '50px', height: '50px'}} strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"/>\n            </div>\n        }\n        else if(this.state.displayResult){\n            showResult = <div style={{paddingTop: \"20px\"}}>\n                <div>\n                    <div>\n                        <span>We have sent an OTP to your registered emial address. </span>\n                    </div>\n                        <div style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>\n                            <span>\n                                <InputText \n                                    type=\"text\"\n                                    value={this.state.otp} \n                                    placeholder= \"Enter OTP received on mobile or email\"\n                                    onChange={this.changeValueOtp}/>\n                            </span>\n                            <span style={{paddingLeft : \"10px\"}}>\n                                 <Button label=\"Verify OTP\" className=\"p-button-outlined\"  onClick={this.verifyOtp}/>\n                            </span>\n                        </div>\n                        <div>\n                    </div>   \n                </div>\n            </div>\n        }\n        let errormessage= null;\n        if(this.state.displayError){\n            errormessage = <div style={{paddingTop:\"20px\", color: \"red\"}}>{this.state.message}</div>\n        }\n\n        let showSuccessMessage = null;\n        if(this.state.showSuccessMessage && !this.state.displayError){\n            showSuccessMessage = <div style={{paddingTop:\"20px\",paddingBottom: \"20px\", color: \"green\"}}>{this.state.message}\n                <div style= {{color : \"black\"}} >Click here to go back to <b style={{color:\"blue\"}} onClick={this.redirectToLogin}>Login</b> page.</div>\n            </div>\n        }\n        return(\n            <div>\n                <div style={{position: \"relative\"}}>\n                     <nav style={{padding:\"0px\", position:\"fixed\",width:\"100%\"}}className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                     <img style={{height:\"80px\" , width:\"90px\",marginLeft:\"20px\"}} src={brandlogo1} alt=\"brandlogo \"/>\n\n                        \n                \n                             <ul className=\"navbar-nav\">\n                                  <li className=\"nav-item\">\n                                      <span className=\"nav-link\" >Help</span>\n                                 </li>\n                                  <li className=\"nav-item\">\n                                  <a href=\"http://localhost:3000/\" className=\"nav-link\" >Log In</a>\n                                     \n                                 </li>\n                             </ul>\n                     </nav>\n\n                </div>\n                \n                \n                <div className=\"first-div\" style={{paddingTop: \"20px\"}}>\n                <h6 style={{fontFamily:\"'Montserrat', sans-serif\"}}><b>Find Your Account</b></h6>\n                <hr />\n                    {renderView}\n                    {showResult}\n                    {errormessage}\n                    {showSuccessMessage}\n                </div>\n                <div className=\"footer\">\n                \n                \n                <span>\n                <img style={{height:\"140px\" , width:\"140px\"}} src={brandlogo} alt=\"brandlogo \"/>\n                </span>\n                <span style={{fontSize:\"12px\"}}>\n                     <b>© 2021.  </b>     \n              </span>\n                \n                </div>\n              \n                \n            </div>\n        );\n    }\n}\n\nexport default ForgotPassword;","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/signup/SignUp.js",[],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/search/searchresponse/SearchResponse.js",[],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/login/Login.js",["44","45","46","47","48"],"/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/search/Search.js",["49"],"import {Component} from \"react\"\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport SearchResponse from \"./searchresponse/SearchResponse\";\nimport { FaUser  } from \"react-icons/fa\";\nimport \"./Search.css\";\n\nclass Search extends Component{\n\n    state = {\n         categories :[\n            { name: \"Electronics\", code: 'ELE000' },\n            { name: 'Home Appliances', code: 'HAP000' },\n            { name: 'Mobiles', code: 'MOB000' }\n        ],\n        searchData:{\n            selectedCategory : \"\",\n            searchValue: \"\"\n        },\n        displayResult: false,\n        displayError: false,\n        \n    }\n    componentDidMount(){\n       // this.props.history.push(\"/\")\n    }\n\n    setSearchDataValue = (event) => {\n        let data = {...this.state.searchData}\n        data.searchValue = event.target.value;\n        this.setState({searchData : data});\n        this.setState({displayError : false})\n    }\n\n    onCityChange = (e) => {\n        let data = {...this.state.searchData}\n        data.selectedCategory = e.value;\n        this.setState({searchData : data});\n        this.setState({displayError : false})\n    }\n\n    submit = (event) =>{\n       event.preventDefault();\n        if(this.state.searchData.searchValue === \"\" ||\n            this.state.searchData.selectedCategory === \"\"){\n                this.setState({displayError : true})\n        }else{\n            this.setState({displayResult : true})\n        }\n    }\n\n    clear = () =>{\n        this.setState({displayResult : false , searchData : {}})\n        let clearedSearchData = {...this.state.searchData};\n        clearedSearchData.searchValue = \"\";\n        clearedSearchData.selectedCategory= \"\"\n        this.setState({searchData : clearedSearchData});\n        this.setState({displayError : false})\n    }\n\n    render(){\n        let showResult = null;\n        if(this.state.displayResult && !this.state.displayError){\n            showResult = <SearchResponse searchData={this.state.searchData}/>\n        }else if(this.state.displayError){\n            showResult = <div style = {{color: \"red\"}}>Please select a category and provide search item</div>;\n        }\n        return(\n            <div>\n                <nav>\n                <nav style={{padding:\"0px\"}}className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <a className=\"navbar-brand\" href=\"#\">monkeyMart</a>\n                 <span className=\"navbar-brand\">\n                 </span>\n                    <ul className=\"navbar-nav\">\n                       <li className=\"nav-item\">\n                        <span className=\"nav-link\">\n                        <span><FaUser/></span> Welcome Mr. Premprakash Jena\n                        </span>\n                       </li>\n                       <li className=\"nav-item\">\n                             <span className=\"nav-link\" >Pricing</span>\n                       </li>\n                       <li className=\"nav-item\">\n                             <span className=\"nav-link\" >Logout</span>\n                       </li>\n                    </ul>\n             </nav>\n                </nav>\n                <h1>Find Your Best Deals here!!</h1>\n                <div>\n                    <span>\n                        <Dropdown id=\"category\" value={this.state.searchData.selectedCategory} \n                            options={this.state.categories} \n                            onChange={this.onCityChange} \n                            optionLabel=\"name\" \n                            placeholder=\"Select a Category\" />\n                    </span>\n                    <span >\n                    <InputText  id=\"search-area\" value={this.state.searchData.searchValue} \n                            placeholder= \"Search for products like smart phones,tvs etc...\"\n                            onChange={this.setSearchDataValue }/>\n                                 <Button style={{border:\"1px solid black\"}} icon=\"pi pi-search\" className=\"p-button-warning\" onClick={this.submit}></Button>\n                    </span>\n                    <span style={{paddingLeft : \"10px\"}}>\n                        <Button id=\"clear\" label=\"Clear\" className=\"p-button-outlined\" onClick={this.clear}/>\n                    </span>\n                </div>\n                \n                <div style={{paddingTop: \"40px\"}}>\n                    {showResult}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","/Users/prem/Desktop/work/ProjectADM/Front-End/adm-ui/src/axios-adm.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":93,"column":55,"nodeType":"56","messageId":"57","endLine":93,"endColumn":57},{"ruleId":"58","severity":1,"message":"59","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":122,"column":17,"nodeType":"65","endLine":122,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":176,"column":31,"nodeType":"65","endLine":176,"endColumn":113},{"ruleId":"66","severity":1,"message":"67","line":183,"column":30,"nodeType":"65","endLine":183,"endColumn":111},{"ruleId":"68","severity":1,"message":"69","line":73,"column":21,"nodeType":"65","endLine":73,"endColumn":58},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'loginJson' is defined but never used.","Identifier","unusedVar","'faUser' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]